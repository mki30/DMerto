<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
    <script src="js/jquery-1.7.1.min.js" type="text/javascript"></script>
    <script src="js/jquery.simpleWeather-2.0.1.min.js" type="text/javascript"></script>
    <script type="text/javascript" src="//maps.googleapis.com/maps/api/js?sensor=false"></script>
    <!--<script type="text/javascript" src="//maps.googleapis.com/maps/api/js?sensor=false&language=hi-IN"></script>-->
    <script src="js/QueryString.js" type="text/javascript"></script>
    <script src="js/Cookie.js" type="text/javascript"></script>
    <script src="js/StationInfo.js" type="text/javascript"></script>
    <script type="text/javascript">
        var geocoder, map, marker;
        var _ZoomToRoute = false;
        var StationID = "";
        $(window).resize(Resized);
        $(document).ready(function ()
        {
            initialize();

            Resized();

            var q = new QueryString();
            q.read();
            var Action = q.getQueryString("Action");
            StationID = q.getQueryString("StationID");
            
            switch (Action)
            {
                case "DelhiMetro":
                    _ZoomToRoute = true;
                    LoadNetwork(1);
                    break;

                //                case "Singapore":  
                //                    _ZoomToRoute = true;  
                //                    LoadNetwork(4);  
                //                    break;  
            }


        });

        function initialize()
        {
            geocoder = new google.maps.Geocoder();

            var Lat = 28.5636952, Lng = 77.12121279999997, Zoom = 15;

            if ($.cookie("Lat") != null) Lat = parseFloat($.cookie("Lat"));
            if ($.cookie("Lng") != null) Lng = parseFloat($.cookie("Lng"));
            if ($.cookie("Zoom") != null) Zoom = parseInt($.cookie("Zoom"));

            if (isNaN(Zoom))
                Zoom = 10;

            var latlng = new google.maps.LatLng(Lat, Lng);
            var myOptions = { zoom: Zoom, center: latlng, mapTypeId: google.maps.MapTypeId.ROADMAP, scaleControl: true }
            map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);

            marker = new google.maps.Marker({ map: map, position: latlng });

            google.maps.event.addListener(map, 'click', function (event)
            {
                var Lat = event.latLng.lat();
                var Lng = event.latLng.lng();

                $.cookie("Lat", Lat, { expires: 1000 });
                $.cookie("Lng", Lng, { expires: 1000 });
                $.cookie("Zoom", map.getZoom(), { expires: 1000 });

                marker.setPosition(new google.maps.LatLng(Lat, Lng));

                try
                {
                    parent.UpdateLatLng(Lat, Lng);
                }
                catch (e) { }
            });

        }

        function Resized()
        {
            var H = $(window).height() - 20;
            $("#map_canvas").height(H);
        }
        //TouristsPlace
        function LoadTouristsplace(StationID, NoZoom)
        {
            if (StationID == undefined)
                StationID = 0;

            $.ajax({
                url: "Data.aspx?Action=GetTouristsplace&Data1=" + BusID,
                success: function (data)
                {
                    ShowBusRoute(data);
                }
            });

        }
        function LoadBusRoute(BusID, NoZoom)
        {
            if (BusID == undefined)
                BusID = 0;

            $.ajax({
                url: "Data.aspx?Action=GetBusRoute&Data1=" + BusID,
                success: function (data)
                {
                    ShowBusRoute(data);
                }
            });

        }

        function LoadNetwork(MetroID)
        {
            if (MetroID == undefined)
                MetroID = 0;

            $.ajax({
                url: "Data.aspx?Action=GET_NETWORK&Data1=" + MetroID,
                success: function (data)
                {
                    ShowNetwork(data);
                }
            });

        }

        function GetPath(StnFromID, StnToID)
        {

            $.ajax({
                url: "Data.aspx?Action=GET_PATH&Data1=" + StnFromID + "&Data2=" + StnToID,
                success: function (data)
                {

                    GetPathDone(data);
                }
            });

        }

        var ShortPathLines = new Array();

        function GetPathDone(data)
        {
            $(ShortPathLines).each(function ()
            {
                this.setMap(null);
            });

            ShortPathLines.length = 0;

            var Lines = data.split('~');

            if (Lines[0] != "")
            {
                alert(Lines[0])
            }
            else
            {
                for (var i = 1; i < Lines.length; i++)
                {
                    if (Lines[i] == "")
                        continue;

                    var Fields1 = Lines[i].split('^');
                    var Fields2 = Lines[i + 1].split('^');

                    var Color = Fields2[3];

                    var pt1 = new google.maps.LatLng(parseFloat(Fields1[1]), parseFloat(Fields1[2]));
                    var pt2 = new google.maps.LatLng(parseFloat(Fields2[1]), parseFloat(Fields2[2]));

                    var flightPath = new google.maps.Polyline({ path: [pt1, pt2], strokeColor: "#000000", strokeCapacity: 0.5, strokeWeight: 10 });
                    flightPath.setMap(map);
                    ShortPathLines.push(flightPath);

                }
            }
        }

        function ShowBusStop(StopID)
        {

            $(Stations).each(function ()
            {
                if (this[0] == StopID)
                {
                    if (this[3] != "" && this[4] != "")
                        SetCenter(this[3], this[4]);
                }
            }
            );
        }

        var bounds = null;
        function ShowBusRoute(data)
        {
            
            ClearMap();
            var Lines = data.split('~');
            Stations.length = 0;
            Connections.length = 0;

            if (Lines[0] != "")
                alert(Lines[0])

            for (var i = 2; i < Lines.length; i++)
            {
                if (Lines[i] == "") continue;
                var F1 = Lines[i - 1].split('^')
                var F2 = Lines[i].split('^')

                Stations.push(F2);

                var Points = new Array();
                var pt = new google.maps.LatLng(parseFloat(F1[3]), parseFloat(F1[4]));
                Points.push(pt);

                if (i == 2)
                {
                    Stations.push(F1);
                    ShowBusStopDot(pt, F1[0]);
                    bounds.extend(pt);
                }

                pt = new google.maps.LatLng(parseFloat(F2[3]), parseFloat(F2[4]));
                Points.push(pt);
                bounds.extend(pt);

                var flightPath = new google.maps.Polyline({ path: Points, strokeColor: "#FF0000", strokeCapacity: 1, strokeWeight: 6 });
                flightPath.setMap(map);
                MapLines.push(flightPath);

                ShowBusStopDot(pt, F2[0]);

            }
        }
        function Touristsplace(StationID)
        {

            $(Stations).each(function ()
            {
                if (this[0] == StationID)
                {
                    if (this[3] != "" && this[4] != "")
                        SetCenter(this[3], this[4]);
                }
            }
            );
        }
        function ShowTouristsplace(data)
        {

            ClearMap();
            var Lines = data.split('~');
            Stations.length = 0;
            Connections.length = 0;

            if (Lines[0] != "")
                alert(Lines[0])

            for (var i = 2; i < Lines.length; i++)
            {
                if (Lines[i] == "") continue;
                var F1 = Lines[i - 1].split('^')
                var F2 = Lines[i].split('^')

                Stations.push(F2);

                var Points = new Array();
                var pt = new google.maps.LatLng(parseFloat(F1[3]), parseFloat(F1[4]));
                Points.push(pt);

                if (i == 2)
                {
                    Stations.push(F1);
                    ShowTouristsplaceDot(pt, F1[0]);
                    bounds.extend(pt);
                }

                pt = new google.maps.LatLng(parseFloat(F2[3]), parseFloat(F2[4]));
                Points.push(pt);
                bounds.extend(pt);

                var flightPath = new google.maps.Polyline({ path: Points, strokeColor: "#FF0000", strokeCapacity: 1, strokeWeight: 6 });
                flightPath.setMap(map);
                MapLines.push(flightPath);

                ShowTouristsplaceDot(pt, F2[0]);

            }
        }
        function ShowTouristsplaceDot(pt, ID)
        {
            var marker = new google.maps.Marker({ map: map, position: pt, icon: 'Images/icon_blue_dot.png' });
            StationMarker.push(marker);
            var stn = this;
            google.maps.event.addListener(marker, 'click', function (event)
            {
                parent.ShowTouristsplaceEdit(ID);
            });

        }

        function ZoomToRoute()
        {
            if (bounds != null)
                map.fitBounds(bounds);
        }

        function ShowBusStopDot(pt, ID)
        {
            var marker = new google.maps.Marker({ map: map, position: pt, icon: 'Images/icon_blue_dot.png' });
            StationMarker.push(marker);
            var stn = this;
            google.maps.event.addListener(marker, 'click', function (event)
            {
                parent.ShowBusRouteEdit(ID);
            });

        }

        var Stations = new Array();
        var Connections = new Array();

        function ShowNetwork(data)
        {
            ClearMap();
            var Lines = data.split('~');
            Stations.length = 0;
            Connections.length = 0;

            if (Lines[0] != "")
            {
                alert(Lines[0])
            }
            else
            {
                var Data1 = data.split('$')[0];
                var Data2 = data.split('$')[1];
                var Lines = Data1.split('~');
                for (var i = 1; i < Lines.length; i++)
                {
                    if (Lines[i] == "") continue;

                    var Fields = Lines[i].split('^');
                    Stations[parseInt(Fields[S_ID])] = Fields;
                }

                Lines = Data2.split('~');
                for (var i = 0; i < Lines.length; i++)
                {
                    if (Lines[i] == "") continue;

                    Connections.push(Lines[i].split('^'));
                }
            }

            DrawNetwork();
            ShowStations();

            if (StationID != "")
            {
                ShowStationByID(StationID);
            }
            else
            {
                if (_ZoomToRoute)
                    ZoomToRoute();
            }

        }

        var StationMarker = new Array();
        function ShowStations()
        {
            StationMarker.length = 0;

            $(Stations).each(function ()
            {
                var pt = new google.maps.LatLng(parseFloat(this[S_Lat]), parseFloat(this[S_Lng]));
                var marker = new google.maps.Marker({ map: map, position: pt, icon: 'Images/icon_blue_dot.png' });

                StationMarker.push(marker);
                var stn = this;
                google.maps.event.addListener(marker, 'click', function (event)
                {
                    parent.SelectedStationID(stn[S_ID], stn[S_MetroID]);
                });
            });
        }

        function ShowStationByID(StationID)
        {
            if (StationID == undefined)
                return;
            $(Stations).each(function ()
            {
                if (this[S_ID] == StationID)
                {
                    SetCenter(this[S_Lat], this[S_Lng]);
                    map.setZoom(18);

                }
            });
        }

        var MapLines = new Array();

        function ClearMap()
        {
            bounds = new google.maps.LatLngBounds();
            $(MapLines).each(function ()
            {
                this.setMap(null);
            });

            MapLines.length = 0;

            $(StationMarker).each(function ()
            {
                this.setMap(null);
            });

        }

        function DrawNetwork()
        {
            $(Connections).each(function (index)
            {
                var Points = new Array();
                var Stn = Stations[this[0]];
                var Color = this[2];
                if (Stn != undefined)
                {
                    if (Stn[S_Lat] != "" && Stn[S_Lat] != "0")
                    {
                        var pt = new google.maps.LatLng(parseFloat(Stn[S_Lat]), parseFloat(Stn[S_Lng]));
                        Points.push(pt);
                        bounds.extend(pt);
                    }
                }
                else
                {
                    alert(this[0] + " From station not  found, remove it from connections");
                }

                Stn = Stations[this[1]];
                if (Stn != undefined)
                {
                    if (Stn[S_Lat] != "" && Stn[S_Lat] != "0")
                    {
                        var pt = new google.maps.LatLng(parseFloat(Stn[S_Lat]), parseFloat(Stn[S_Lng]));
                        Points.push(pt);
                        bounds.extend(pt);
                    }

                    if (Points.length > 0)
                    {
                        var flightPath = new google.maps.Polyline({ path: Points, strokeColor: "#" + Color, strokeCapacity: 1, strokeWeight: 6 });
                        flightPath.setMap(map);
                        MapLines.push(flightPath);
                        ShowNet = true;
                    }
                }
                else
                {
                    alert(this[1] + " To station not  found, remove it from connections");
                }

            });
        }

        function SetCenter(Lat, Lng)
        {
            var pt = new google.maps.LatLng(parseFloat(Lat), parseFloat(Lng));

            $.cookie("Lat", Lat, { expires: 1000 });
            $.cookie("Lng", Lng, { expires: 1000 });
            $.cookie("Zoom", map.getZoom(), { expires: 1000 });
            map.setCenter(pt);
            marker.setPosition(pt);
        }

        function codeAddress(address)
        {
            alert(address);
            geocoder.geocode({ 'address': address }, function (results, status)
            {
                if (status == google.maps.GeocoderStatus.OK)
                {
                    map.setCenter(results[0].geometry.location);
                    var pt = results[0].geometry.location;
                    marker.setPosition(pt);

                    try
                    {
                        parent.AddresslatLng(pt.lat(), pt.lng());
                    }
                    catch (e)
                    {
                    }

                }

            });
        }

    </script>
</head>
<body>
    <div id="map_canvas" style="width: 100%; height: 400px">
    </div>
</body>
</html>
